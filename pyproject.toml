[tool.semantic_release]
version_variable = [
    "fortifyapi/__init__.py:__version__",
    "pyproject.toml:version"
]

build_command = "pip install poetry && poetry build"
[tool.poetry]
name = "fortifyapi"
version = "3.1.5"
description = "Fortify API is a Python RESTFul API client module for Fortify Software Security Center"
authors = ["xolian <brandon@spruth.co>", "vestin"]
license = "MIT"
keywords=['fortify', 'api', 'security', 'software', 'microfocus', 'ssc', 'sast']
readme = "README.md"
packages = [
    { include = "fortifyapi" }
]
classifiers=[
    'Development Status :: 4 - Beta',
    'Intended Audience :: Developers',
    'Natural Language :: English',
    'License :: OSI Approved :: MIT License',
    'Topic :: Software Development',
    'Topic :: Software Development :: Libraries :: Python Modules',
    'Topic :: Software Development :: Libraries :: Application Frameworks',
    'Operating System :: OS Independent',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
]

[tool.poetry.dependencies]
python = "^3.10"
requests = "^2.28.2"
urllib3 = ">=1.21.1,<1.27"
isort = "^5.12.0"
black = "^22.12.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.deptry]
ignore_obsolete = ["black"]

[tool.black]
line-length = 120
target-version = ['py39']
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''
